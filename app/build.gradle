apply plugin: 'com.android.application'

import org.apache.tools.ant.taskdefs.condition.Os

android {
    compileSdkVersion 19
    buildToolsVersion '25'
    defaultConfig {
        applicationId "cn.edu.bupt.qkdswitchercontroll"
        minSdkVersion 19
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "pl2303_driver"          //生成的so名字
            abiFilters "armeabi", "armeabi-v7a"      //输出指定三种abi体系结构下的so库。目前可有可无。
            ldLibs "log"
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = ['src/main/jni']
        // if make jni.srcDirs = [], this will disable automatic ndk-build call
//            jni.srcDirs = []  // if make jni.srcDirs = [], this will disable automatic ndk-build call
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile fileTree(dir: 'src/main/obj', includes: ['*.so'])
    //    compile 'com.android.support:appcompat-v7:21.0.2'
    testCompile 'junit:junit:4.12'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    println('executing ndkBuild')
    def ndkBuildingDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder().absolutePath
    def ndkBuildPath
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        ndkBuildPath = ndkBuildingDir + '/ndk-build.cmd'
    } else {
        ndkBuildPath = ndkBuildingDir + '/ndk-build'
    }
    commandLine ndkBuildPath, '-j8', '-C', file('src/main/jni').absolutePath
}
